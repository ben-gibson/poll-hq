# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    uuid: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Web\Controller\:
        resource: '../src/UI/Web/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    # READ MODELS

    App\Adapter\Persistence\Doctrine\ReadModel\DBALPollRepository:
        arguments:
            - '@doctrine.dbal.read_connection'

    # MESSAGE BUS

    Symfony\Component\Messenger\Transport\Serialization\Serializer: ~

    app.messenger.serializer:
        class: App\Adapter\MessageBus\DelegatingTransportSerializer
        arguments:
            $defaultSerializer: '@Symfony\Component\Messenger\Transport\Serialization\Serializer'

    # COMMANDS

    command_handlers:
        namespace:  App\Application\Command\
        resource: '%kernel.project_dir%/src/Application/Command/*/*Handler.php'
        tags:
            - { name: messenger.message_handler, bus: messenger.bus.command }

    App\Adapter\Command\SymfonyCommandBus:
        arguments:
            - '@messenger.bus.command'

    # EVENTS
    App\Adapter\Event\SymfonyEventBus:
        arguments:
            - '@messenger.bus.event'

    App\Domain\Event\EventBus: '@App\Adapter\Event\SymfonyEventBus'

    Krixon\DomainEvent\Storage\Hydration\Resolver\EventTypeMapResolver:
        arguments:
            - {'poll.created': 'App\Domain\Poll\Event\PollCreated'}

    Krixon\DomainEvent\Storage\Hydration\EventHydrator: '@Krixon\DomainEvent\Storage\Hydration\EventReflectionHydrator'

    Krixon\DomainEvent\Storage\Hydration\EventReflectionHydrator:
        arguments:
            - '@Krixon\DomainEvent\Storage\Hydration\Resolver\EventTypeMapResolver'

    App\Adapter\Persistence\Doctrine\DBALEventStreamStore:
        arguments:
            - '@doctrine.dbal.event_connection'
            - '@Krixon\DomainEvent\Storage\Hydration\EventReflectionHydrator'

    Krixon\DomainEvent\Storage\EventStreamStore: '@App\Adapter\Persistence\Doctrine\DBALEventStreamStore'
